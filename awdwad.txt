Тестовое задание для кандидата

 

Описание задачи

 

Необходимо создать телеграм-бота, который будет выполнять следующие функции:

 

1. Собирать данные с веб-страницы:

• Парсить данные с заданного веб-сайта (например, новости с определенного сайта).

• Сохранять спарсенные данные в базу данных.

2. Работа с базой данных:

• Использовать базу данных для хранения и извлечения данных.

• Предоставить возможность пользователю запросить данные через бота.

3. Создание телеграм-бота:

• Настроить телеграм-бота, который будет взаимодействовать с пользователем.

• Реализовать команды для бота, которые позволяют:

• Запросить последние данные с веб-сайта.

• Поиск данных в базе по ключевому слову.

 

Требования

 

1. Парсинг:

• Использование библиотеки BeautifulSoup или Scrapy для парсинга веб-страниц.

• Код должен быть чистым и легко читаемым, с комментариями.

2. База данных:

• Использование SQLite или PostgreSQL для хранения данных.

• Реализация операций CRUD (Create, Read, Update, Delete) для работы с базой данных.

3. Телеграм-бот:

• Использование библиотеки python-telegram-bot или aiogram.

• Обработка команд /start, /latest (последние данные), /search <ключевое_слово> (поиск данных).

4. Дополнительно:

• Код должен быть загружен в репозиторий на GitHub с подробным README файлом, в котором описаны шаги для запуска проекта и инструкции по использованию бота.

 

Критерии оценки

 

1. Корректность работы:

• Правильность работы парсинга.

• Корректная работа с базой данных.

• Работоспособность телеграм-бота.

2. Качество кода:

• Чистота и читаемость кода.

• Наличие комментариев.

• Структурированность проекта.

3. Документация:

• Наличие и полнота README файла.

• Инструкции по запуску и использованию.

• Результаты тестирования.

 

Примерный план выполнения задания

 

1. Создать проект и настроить виртуальное окружение.

2. Реализовать парсинг данных с веб-страницы и сохранить их в базу данных.

3. Настроить и подключить базу данных.

4. Реализовать телеграм-бота и подключить команды.

5. Тестирование и отладка всех компонентов.

6. Оформление документации и загрузка проекта на GitHub.

 

Время на выполнение задания

 

• Ориентировочное время выполнения: 7 дней. (время будет учитываться)
• Сайт для парсинга можно выбрать на свое усмотрение. Учитываются креативность и подход.